// @generated by protobuf-ts 2.9.1
// @generated from protobuf file "student.proto" (package "com.example", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { StudentService } from "./student";
import type { EmptyRequest } from "./student";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { StudentRequest } from "./student";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { StudentReply } from "./student";
import type { CreateOrUpdateStudentRequest } from "./student";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service com.example.StudentService
 */
export interface IStudentServiceClient {
    /**
     * @generated from protobuf rpc: addStudentDetails(com.example.CreateOrUpdateStudentRequest) returns (com.example.StudentReply);
     */
    addStudentDetails(input: CreateOrUpdateStudentRequest, options?: RpcOptions): UnaryCall<CreateOrUpdateStudentRequest, StudentReply>;
    /**
     * @generated from protobuf rpc: getStudentDetails(com.example.StudentRequest) returns (com.example.StudentReply);
     */
    getStudentDetails(input: StudentRequest, options?: RpcOptions): UnaryCall<StudentRequest, StudentReply>;
    /**
     * @generated from protobuf rpc: editStudentDetails(com.example.CreateOrUpdateStudentRequest) returns (com.example.StudentReply);
     */
    editStudentDetails(input: CreateOrUpdateStudentRequest, options?: RpcOptions): UnaryCall<CreateOrUpdateStudentRequest, StudentReply>;
    /**
     * @generated from protobuf rpc: deleteStudentDetails(com.example.StudentRequest) returns (com.example.StudentReply);
     */
    deleteStudentDetails(input: StudentRequest, options?: RpcOptions): UnaryCall<StudentRequest, StudentReply>;
    /**
     * @generated from protobuf rpc: listStudentsDetails(com.example.EmptyRequest) returns (stream com.example.StudentReply);
     */
    listStudentsDetails(input: EmptyRequest, options?: RpcOptions): ServerStreamingCall<EmptyRequest, StudentReply>;
}
/**
 * @generated from protobuf service com.example.StudentService
 */
export class StudentServiceClient implements IStudentServiceClient, ServiceInfo {
    typeName = StudentService.typeName;
    methods = StudentService.methods;
    options = StudentService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: addStudentDetails(com.example.CreateOrUpdateStudentRequest) returns (com.example.StudentReply);
     */
    addStudentDetails(input: CreateOrUpdateStudentRequest, options?: RpcOptions): UnaryCall<CreateOrUpdateStudentRequest, StudentReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateOrUpdateStudentRequest, StudentReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: getStudentDetails(com.example.StudentRequest) returns (com.example.StudentReply);
     */
    getStudentDetails(input: StudentRequest, options?: RpcOptions): UnaryCall<StudentRequest, StudentReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<StudentRequest, StudentReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: editStudentDetails(com.example.CreateOrUpdateStudentRequest) returns (com.example.StudentReply);
     */
    editStudentDetails(input: CreateOrUpdateStudentRequest, options?: RpcOptions): UnaryCall<CreateOrUpdateStudentRequest, StudentReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateOrUpdateStudentRequest, StudentReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: deleteStudentDetails(com.example.StudentRequest) returns (com.example.StudentReply);
     */
    deleteStudentDetails(input: StudentRequest, options?: RpcOptions): UnaryCall<StudentRequest, StudentReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<StudentRequest, StudentReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: listStudentsDetails(com.example.EmptyRequest) returns (stream com.example.StudentReply);
     */
    listStudentsDetails(input: EmptyRequest, options?: RpcOptions): ServerStreamingCall<EmptyRequest, StudentReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<EmptyRequest, StudentReply>("serverStreaming", this._transport, method, opt, input);
    }
}
